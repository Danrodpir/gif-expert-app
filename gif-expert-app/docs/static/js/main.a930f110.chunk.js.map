{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKd,SACI,uBACIO,KAAM,OACNC,MAAOT,EACPU,YAAY,yBACZC,SAnBU,SAACR,GACvBF,EAAeE,EAAES,OAAOH,a,+BCRnBI,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUT,GAFtF,uBAGAU,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNvB,EAAQN,GACH8B,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAAC1B,IAEG2B,EDbwBK,CAAahC,GAAhCmB,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAIpB,OACI,qCACI,6BAAK1B,IAEJ0B,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,8CAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEStBgB,EAzBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,mBAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ2C,EAAWnB,KAAI,SAAAf,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADJA,YCdlCmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a930f110.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >= 1){\r\n            setCategories( category => [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <form onSubmit = {handleSubmit}>\r\n                <input \r\n                    type= \"text\"         \r\n                    value={inputValue}  \r\n                    placeholder=\"Busca tus gifs aquÃ­\"\r\n                    onChange={handleInputChange}     \r\n                />   \r\n            </form>      \r\n    )\r\n};\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=4uqNmT4YX41RoAU4QKRKUcruCIg9Majt&q=${encodeURI(category)}}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n//import { getGifs } from '../helpers/getGif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);    \r\n\r\n    //getGifs()\r\n\r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });           \r\n            })\r\n    }, [category])\r\n    \r\n    return state;\r\n}","import { useState } from \"react\";\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n        \r\n    const [categories, setCategories] = useState(['Dark Souls III'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            key= {category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}